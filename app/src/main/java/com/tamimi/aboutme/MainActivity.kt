package com.tamimi.aboutme

import android.content.Context
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.view.inputmethod.InputMethodManager
import android.widget.Toast
import androidx.databinding.DataBindingUtil
import com.tamimi.aboutme.databinding.ActivityMainBinding
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {

    // data binding object
    // the name of the class is auto generated by the compiler
    private lateinit var binding: ActivityMainBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // setup data binding object and set it to inflate the view instead of setContentView()
        binding = DataBindingUtil.setContentView(this, R.layout.activity_main)


        // create an onClickListener on the done button to take the text from the edit text and display it in the text view and make the button invisible
        // update nickname with entered name
        binding.doneBtn.setOnClickListener { view ->
            updateNickName(view)
        }

        // if the user click on his nickname again we want to put the edit text and the done btn back again so he can edit his name
        binding.nickNameTextView.setOnClickListener {

            // show the btn and text edit and hide the nickname text view and request focus for text edit and show the keyboard
            makeEditable()
        }

    }

    private fun makeEditable() {

        binding.apply {
            nickNameEditText.visibility = View.VISIBLE
            doneBtn.visibility = View.VISIBLE
            nickNameTextView.visibility = View.GONE

            // request focus for the edit text
            nickNameEditText.requestFocus()
        }

        // and show the keyboard
        showKeyboard()
    }

    private fun updateNickName(view: View) {

        // get context to apply it to the toast
        val context = this

        // check if the user entered a text
        if (binding.nickNameEditText.text.isNotEmpty()) {

            binding.apply {

                // change the text
                nickNameTextView.text = nickNameEditText.text.toString()

                // show the text field of the nickname
                nickNameTextView.visibility = View.VISIBLE

                // hide the button
                doneBtn.visibility = View.GONE

                // hide edit text
                nickNameEditText.visibility = View.GONE

                // and hide the keyboard
                hideKeyboard(view)
            }
        } else {
            Toast.makeText(context, "please enter your nickname", Toast.LENGTH_SHORT).show()
        }

    }


    private fun hideKeyboard(view: View) {
        val inputMethodManager = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
        inputMethodManager.hideSoftInputFromWindow(view.windowToken, 0)
    }

    private fun showKeyboard() {
        val imm = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
        imm.showSoftInput(nick_name_edit_text, 0)
    }


}